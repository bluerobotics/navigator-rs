(function() {var type_impls = {
"palette":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#246-262\">source</a><a href=\"#impl-AbsDiffEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&lt;Epsilon = T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>&gt;,\n    T: <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>,\n    T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" class=\"associatedtype\">Epsilon</a> = &lt;T as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#254-256\">source</a><a href=\"#method.default_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\" class=\"fn\">default_epsilon</a>() -&gt; Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#258-261\">source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>, epsilon: T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/abs_diff_eq.rs.html#24\">source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#method.abs_diff_ne\" class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" title=\"method approx::abs_diff_eq::AbsDiffEq::abs_diff_eq\"><code>AbsDiffEq::abs_diff_eq</code></a>.</div></details></div></details>","AbsDiffEq","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#313-322\">source</a><a href=\"#impl-Add%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#316-321\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#302-311\">source</a><a href=\"#impl-Add-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#305-310\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#331-336\">source</a><a href=\"#impl-AddAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#332-335\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#324-329\">source</a><a href=\"#impl-AddAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#325-328\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#35-45\">source</a><a href=\"#impl-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_alpha\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#37-39\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.min_alpha\" class=\"fn\">min_alpha</a>() -&gt; T</h4></section></summary><div class=\"docblock\"><p>Return the <code>alpha</code> value minimum.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_alpha\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#42-44\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.max_alpha\" class=\"fn\">max_alpha</a>() -&gt; T</h4></section></summary><div class=\"docblock\"><p>Return the <code>alpha</code> value maximum.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#196-221\">source</a><a href=\"#impl-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hsla\"></span><a href=\"palette/type.Hsla.html\" title=\"type palette::Hsla\"><code>Hsla</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#203-208\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Linear HSL and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#211-213\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, lightness, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#216-220\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, lightness, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, lightness, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsl%3CSrgb,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#181-193\">source</a><a href=\"#impl-Alpha%3CHsl%3CSrgb,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hsla\"></span><a href=\"palette/type.Hsla.html\" title=\"type palette::Hsla\"><code>Hsla</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#187-192\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    lightness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>HSL and transparency for linear sRGB.</p>\n</div></details></div></details>",0,"palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#165-177\">source</a><a href=\"#impl-Alpha%3CHsluv%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hsluva\"></span><a href=\"palette/type.Hsluva.html\" title=\"type palette::Hsluva\"><code>Hsluva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#171-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(hue: H, saturation: T, l: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>HSLuv and transparency with standard D65 whitepoint.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#180-203\">source</a><a href=\"#impl-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hsluva\"></span><a href=\"palette/type.Hsluva.html\" title=\"type palette::Hsluva\"><code>Hsluva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#187-192\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    l: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>HSLuv and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#195-197\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, l, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#200-202\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, l, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, l, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#192-217\">source</a><a href=\"#impl-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hsva\"></span><a href=\"palette/type.Hsva.html\" title=\"type palette::Hsva\"><code>Hsva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#199-204\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Linear HSV and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#207-209\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, saturation, value, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#212-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, saturation, value, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, saturation, value, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHsv%3CSrgb,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#177-189\">source</a><a href=\"#impl-Alpha%3CHsv%3CSrgb,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hsva\"></span><a href=\"palette/type.Hsva.html\" title=\"type palette::Hsva\"><code>Hsva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#183-188\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    saturation: T,\n    value: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>HSV and transparency for linear sRGB.</p>\n</div></details></div></details>",0,"palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#199-224\">source</a><a href=\"#impl-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hwba\"></span><a href=\"palette/type.Hwba.html\" title=\"type palette::Hwba\"><code>Hwba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#206-211\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Linear HWB and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#214-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(hue, whiteness, blackness, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#219-223\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    (hue, whiteness, blackness, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(hue, whiteness, blackness, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CHwb%3CSrgb,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#184-196\">source</a><a href=\"#impl-Alpha%3CHwb%3CSrgb,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Hwba\"></span><a href=\"palette/type.Hwba.html\" title=\"type palette::Hwba\"><code>Hwba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#190-195\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;&gt;(\n    hue: H,\n    whiteness: T,\n    blackness: T,\n    alpha: A,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>HWB and transparency for linear sRGB.</p>\n</div></details></div></details>",0,"palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#173-185\">source</a><a href=\"#impl-Alpha%3CLab%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Laba\"></span><a href=\"palette/type.Laba.html\" title=\"type palette::Laba\"><code>Laba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#179-184\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(l: T, a: T, b: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*a*b* and transparency and white point D65.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#188-211\">source</a><a href=\"#impl-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Laba\"></span><a href=\"palette/type.Laba.html\" title=\"type palette::Laba\"><code>Laba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#195-200\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>(l: T, a: T, b: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*a*b* and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#203-205\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L\\*, a\\*, b\\*, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#208-210\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((l, a, b, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L\\*, a\\*, b\\*, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#172-184\">source</a><a href=\"#impl-Alpha%3CLch%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Lcha\"></span><a href=\"palette/type.Lcha.html\" title=\"type palette::Lcha\"><code>Lcha</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#178-183\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*C*h° and transparency with white point D65.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#187-210\">source</a><a href=\"#impl-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Lcha\"></span><a href=\"palette/type.Lcha.html\" title=\"type palette::Lcha\"><code>Lcha</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#194-199\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*C*h° and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#202-204\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L\\*, C\\*, h°, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#207-209\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;&gt;(\n    (l, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L\\*, C\\*, h°, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#163-175\">source</a><a href=\"#impl-Alpha%3CLchuv%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Lchuva\"></span><a href=\"palette/type.Lchuva.html\" title=\"type palette::Lchuva\"><code>Lchuva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#169-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*C*uv h°uv and transparency with white point D65.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#178-201\">source</a><a href=\"#impl-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Lchuva\"></span><a href=\"palette/type.Lchuva.html\" title=\"type palette::Lchuva\"><code>Lchuva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#185-190\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*C*uv h°uv and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#193-195\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L\\*, C\\*uv, h°uv, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#198-200\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;&gt;(\n    (l, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L\\*, C\\*uv, h°uv, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#189-232\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Lumaa\"></span><a href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\"><code>Lumaa</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#196-201\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(luma: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a luminance color with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#204-210\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a> + <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a> + <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#213-221\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    A: <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#224-226\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(luma, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#229-231\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((luma, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(luma, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#235-273\">source</a><a href=\"#impl-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Lumaa\"></span><a href=\"palette/luma/type.Lumaa.html\" title=\"type palette::luma::Lumaa\"><code>Lumaa</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#242-247\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_linear\" class=\"fn\">into_linear</a>(self) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the color to linear luminance with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#250-252\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_linear\" class=\"fn\">from_linear</a>(\n    color: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;, T&gt;, A&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convert linear luminance to non-linear luminance with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#255-262\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_encoding\" class=\"fn\">into_encoding</a>&lt;St: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;St, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the color to a different encoding with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#265-272\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_encoding\" class=\"fn\">from_encoding</a>&lt;St: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>&lt;WhitePoint = S::<a class=\"associatedtype\" href=\"palette/luma/trait.LumaStandard.html#associatedtype.WhitePoint\" title=\"type palette::luma::LumaStandard::WhitePoint\">WhitePoint</a>&gt;&gt;(\n    color: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;St, T&gt;, A&gt;,\n) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convert luminance from a different encoding with transparency.</p>\n</div></details></div></details>",0,"palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#174-186\">source</a><a href=\"#impl-Alpha%3CLuv%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Luva\"></span><a href=\"palette/type.Luva.html\" title=\"type palette::Luva\"><code>Luva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#180-185\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(l: T, u: T, v: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*u*v* and transparency and white point D65.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#189-212\">source</a><a href=\"#impl-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Luva\"></span><a href=\"palette/type.Luva.html\" title=\"type palette::Luva\"><code>Luva</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#196-201\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>(l: T, u: T, v: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE L*u*v* and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#204-206\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to u <code>(L\\*, u\\*, v\\*, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#209-211\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((l, u, v, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from u <code>(L\\*, u\\*, v\\*, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#200-222\">source</a><a href=\"#impl-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Oklaba\"></span><a href=\"palette/type.Oklaba.html\" title=\"type palette::Oklaba\"><code>Oklaba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#206-211\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(l: T, a: T, b: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Oklab and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#214-216\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L, a, b, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#219-221\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((l, a, b, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L, a, b, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::oklab::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3COklch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#168-190\">source</a><a href=\"#impl-Alpha%3COklch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Oklcha\"></span><a href=\"palette/type.Oklcha.html\" title=\"type palette::Oklcha\"><code>Oklcha</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#174-179\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(l: T, chroma: T, hue: H, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Oklch and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#182-184\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, A)</h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(L, C, h, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#187-189\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;&gt;(\n    (l, chroma, hue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(L, C, h, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::oklch::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#257-300\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Rgba\"></span><a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#259-264\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(red: T, green: T, blue: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Non-linear RGB.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#267-278\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_format\" class=\"fn\">into_format</a>&lt;U, B&gt;(self) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, U&gt;, B&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a> + <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;T&gt;,\n    B: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a> + <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;A&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert into another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_format\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#281-289\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_format\" class=\"fn\">from_format</a>&lt;U, B&gt;(color: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, U&gt;, B&gt;) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    A: <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;B&gt;,\n    B: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h4></section></summary><div class=\"docblock\"><p>Convert from another component type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#292-294\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(red, green, blue, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#297-299\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((red, green, blue, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(red, green, blue, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#332-372\">source</a><a href=\"#impl-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"docblock\"><p><span id=\"Rgba\"></span><a href=\"palette/rgb/type.Rgba.html\" title=\"type palette::rgb::Rgba\"><code>Rgba</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#334-341\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_linear\" class=\"fn\">into_linear</a>(self) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>&gt;, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the color to linear RGB with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_linear\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#344-351\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_linear\" class=\"fn\">from_linear</a>(color: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>&gt;, T&gt;, A&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert linear RGB to non-linear RGB with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#354-361\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_encoding\" class=\"fn\">into_encoding</a>&lt;St: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>&lt;Space = S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>&gt;&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;St, T&gt;, A&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the color to a different encoding with transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_encoding\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#364-371\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_encoding\" class=\"fn\">from_encoding</a>&lt;St: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>&lt;Space = S::<a class=\"associatedtype\" href=\"palette/rgb/trait.RgbStandard.html#associatedtype.Space\" title=\"type palette::rgb::RgbStandard::Space\">Space</a>&gt;&gt;(\n    color: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;St, T&gt;, A&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert RGB from a different encoding with transparency.</p>\n</div></details></div></details>",0,"palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#178-190\">source</a><a href=\"#impl-Alpha%3CXyz%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Xyza\"></span><a href=\"palette/type.Xyza.html\" title=\"type palette::Xyza\"><code>Xyza</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#184-189\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(x: T, y: T, luma: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE Yxy and transparency with white point D65.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#193-216\">source</a><a href=\"#impl-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Xyza\"></span><a href=\"palette/type.Xyza.html\" title=\"type palette::Xyza\"><code>Xyza</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#200-205\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>(x: T, y: T, z: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE XYZ and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#208-210\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(X, Y, Z, alpha)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#213-215\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((x, y, z, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(X, Y, Z, alpha)</code> tuple.</p>\n</div></details></div></details>",0,"palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CD65,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#172-184\">source</a><a href=\"#impl-Alpha%3CYxy%3CD65,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;<a class=\"struct\" href=\"palette/white_point/struct.D65.html\" title=\"struct palette::white_point::D65\">D65</a>, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Yxya\"></span><a href=\"palette/type.Yxya.html\" title=\"type palette::Yxya\"><code>Yxya</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#178-183\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.new\" class=\"fn\">new</a>(x: T, y: T, luma: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE Yxy and transparency with white point D65.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#186-209\">source</a><a href=\"#impl-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp, T, A&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>,\n    Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>,</div></h3></section></summary><div class=\"docblock\"><p><span id=\"Yxya\"></span><a href=\"palette/type.Yxya.html\" title=\"type palette::Yxya\"><code>Yxya</code></a> implementations.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_wp\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#193-198\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.with_wp\" class=\"fn\">with_wp</a>(x: T, y: T, luma: T, alpha: A) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>CIE Yxy and transparency.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#201-203\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.into_components\" class=\"fn\">into_components</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class=\"docblock\"><p>Convert to a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_components\" class=\"method\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#206-208\">source</a><h4 class=\"code-header\">pub fn <a href=\"palette/struct.Alpha.html#tymethod.from_components\" class=\"fn\">from_components</a>((x, y, luma, alpha): <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from a <code>(x, y, luma)</code>, a.k.a. <code>(x, y, Y)</code> tuple.</p>\n</div></details></div></details>",0,"palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CP%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#456-464\">source</a><a href=\"#impl-AsMut%3CP%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/encoding/pixel/trait.Pixel.html\" title=\"trait palette::encoding::pixel::Pixel\">Pixel</a>&lt;T&gt;,\n    P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#461-463\">source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut P</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<P>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CP%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#446-454\">source</a><a href=\"#impl-AsRef%3CP%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;P&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/encoding/pixel/trait.Pixel.html\" title=\"trait palette::encoding::pixel::Pixel\">Pixel</a>&lt;T&gt;,\n    P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#451-453\">source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;P</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<P>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Blend-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#199-213\">source</a><a href=\"#impl-Blend-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/blend/trait.Blend.html\" title=\"trait palette::blend::Blend\">Blend</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"palette/blend/trait.Blend.html\" title=\"trait palette::blend::Blend\">Blend</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a>: <a class=\"trait\" href=\"palette/trait.ComponentWise.html\" title=\"trait palette::ComponentWise\">ComponentWise</a>&lt;Scalar = T&gt;,\n    <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a>, T&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a>, T&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Color\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Color\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/blend/trait.Blend.html#associatedtype.Color\" class=\"associatedtype\">Color</a> = &lt;C as <a class=\"trait\" href=\"palette/blend/trait.Blend.html\" title=\"trait palette::blend::Blend\">Blend</a>&gt;::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a></h4></section></summary><div class='docblock'>The core color type. Typically <code>Self</code> for color types without alpha.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_premultiplied\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#206-208\">source</a><a href=\"#method.into_premultiplied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.into_premultiplied\" class=\"fn\">into_premultiplied</a>(self) -&gt; <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a>, T&gt;</h4></section></summary><div class='docblock'>Convert the color to premultiplied alpha.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_premultiplied\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#210-212\">source</a><a href=\"#method.from_premultiplied\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#tymethod.from_premultiplied\" class=\"fn\">from_premultiplied</a>(color: <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a>, T&gt;) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Convert the color from premultiplied alpha.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.blend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#51-58\">source</a><a href=\"#method.blend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.blend\" class=\"fn\">blend</a>&lt;F&gt;(self, destination: Self, blend_function: F) -&gt; Self<div class=\"where\">where\n    F: <a class=\"trait\" href=\"palette/blend/trait.BlendFunction.html\" title=\"trait palette::blend::BlendFunction\">BlendFunction</a>&lt;Self::<a class=\"associatedtype\" href=\"palette/blend/trait.Blend.html#associatedtype.Color\" title=\"type palette::blend::Blend::Color\">Color</a>&gt;,</div></h4></section></summary><div class='docblock'>Blend self, as the source color, with <code>destination</code>, using\n<code>blend_function</code>. Anything that implements <code>BlendFunction</code> is\nacceptable, including functions and closures. <a href=\"palette/blend/trait.Blend.html#method.blend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.over\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#62-77\">source</a><a href=\"#method.over\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.over\" class=\"fn\">over</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Place <code>self</code> over <code>other</code>. This is the good old common alpha\ncomposition equation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inside\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#81-94\">source</a><a href=\"#method.inside\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.inside\" class=\"fn\">inside</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Results in the parts of <code>self</code> that overlaps the visible parts of\n<code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.outside\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#98-111\">source</a><a href=\"#method.outside\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.outside\" class=\"fn\">outside</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Results in the parts of <code>self</code> that lies outside the visible parts of\n<code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.atop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#114-129\">source</a><a href=\"#method.atop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.atop\" class=\"fn\">atop</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Place <code>self</code> over only the visible parts of <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#132-152\">source</a><a href=\"#method.xor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.xor\" class=\"fn\">xor</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Results in either <code>self</code> or <code>other</code>, where they do not overlap.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.plus\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#156-169\">source</a><a href=\"#method.plus\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.plus\" class=\"fn\">plus</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Add <code>self</code> and <code>other</code>. This uses the alpha component to regulate the\neffect, so it’s not just plain component wise addition.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#173-188\">source</a><a href=\"#method.multiply\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.multiply\" class=\"fn\">multiply</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply <code>self</code> with <code>other</code>. This uses the alpha component to regulate\nthe effect, so it’s not just plain component wise multiplication.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.screen\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#191-204\">source</a><a href=\"#method.screen\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.screen\" class=\"fn\">screen</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Make a color which is at least as light as <code>self</code> or <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overlay\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#208-230\">source</a><a href=\"#method.overlay\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.overlay\" class=\"fn\">overlay</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply <code>self</code> or <code>other</code> if other is dark, or screen them if <code>other</code>\nis light. This results in an S curve.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.darken\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#233-248\">source</a><a href=\"#method.darken\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.darken\" class=\"fn\">darken</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Return the darkest parts of <code>self</code> and <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#251-266\">source</a><a href=\"#method.lighten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.lighten\" class=\"fn\">lighten</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Return the lightest parts of <code>self</code> and <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dodge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#270-293\">source</a><a href=\"#method.dodge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.dodge\" class=\"fn\">dodge</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Lighten <code>other</code> to reflect <code>self</code>. Results in <code>other</code> if <code>self</code> is\nblack.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.burn\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#297-320\">source</a><a href=\"#method.burn\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.burn\" class=\"fn\">burn</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Darken <code>other</code> to reflect <code>self</code>. Results in <code>other</code> if <code>self</code> is\nwhite.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hard_light\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#325-347\">source</a><a href=\"#method.hard_light\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.hard_light\" class=\"fn\">hard_light</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Multiply <code>self</code> or <code>other</code> if other is dark, or screen them if <code>self</code>\nis light. This is similar to <code>overlay</code>, but depends on <code>self</code> instead\nof <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.soft_light\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#352-391\">source</a><a href=\"#method.soft_light\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.soft_light\" class=\"fn\">soft_light</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Lighten <code>other</code> if <code>self</code> is light, or darken <code>other</code> as if it’s burned\nif <code>self</code> is dark. The effect is increased if the components of <code>self</code>\nis further from 0.5.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#395-411\">source</a><a href=\"#method.difference\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.difference\" class=\"fn\">difference</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Return the absolute difference between <code>self</code> and <code>other</code>. It’s\nbasically <code>abs(self - other)</code>, but regulated by the alpha component.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.exclusion\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/blend.rs.html#416-432\">source</a><a href=\"#method.exclusion\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/blend/trait.Blend.html#method.exclusion\" class=\"fn\">exclusion</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Similar to <code>difference</code>, but appears to result in a lower contrast.\n<code>other</code> is inverted if <code>self</code> is white, and preserved if <code>self</code> is\nblack.</div></details></div></details>","Blend","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clamp-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#181-197\">source</a><a href=\"#impl-Clamp-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Clamp.html\" title=\"trait palette::Clamp\">Clamp</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"palette/trait.Clamp.html\" title=\"trait palette::Clamp\">Clamp</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_within_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#182-184\">source</a><a href=\"#method.is_within_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Clamp.html#tymethod.is_within_bounds\" class=\"fn\">is_within_bounds</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Check if the color’s components are within the expected clamped range\nbounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#186-191\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Clamp.html#tymethod.clamp\" class=\"fn\">clamp</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Return a new color where the components have been clamped to the nearest\nvalid values.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp_self\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#193-196\">source</a><a href=\"#method.clamp_self\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Clamp.html#tymethod.clamp_self\" class=\"fn\">clamp_self</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clamp the color’s components to the nearest valid values.</div></details></div></details>","Clamp","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#22\">source</a><a href=\"#impl-Clone-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#22\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ComponentWise-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#215-231\">source</a><a href=\"#impl-ComponentWise-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.ComponentWise.html\" title=\"trait palette::ComponentWise\">ComponentWise</a>&lt;Scalar = T&gt;, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"palette/trait.ComponentWise.html\" title=\"trait palette::ComponentWise\">ComponentWise</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.ComponentWise.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = T</h4></section></summary><div class='docblock'>The scalar type for color components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.component_wise\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#218-223\">source</a><a href=\"#method.component_wise\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.ComponentWise.html#tymethod.component_wise\" class=\"fn\">component_wise</a>&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, T) -&gt; T&gt;(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;,\n    f: F,\n) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Perform a binary operation on this and an other color.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.component_wise_self\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#225-230\">source</a><a href=\"#method.component_wise_self\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.ComponentWise.html#tymethod.component_wise_self\" class=\"fn\">component_wise_self</a>&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; T&gt;(&amp;self, f: F) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Perform a unary operation on this color.</div></details></div></details>","ComponentWise","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#22\">source</a><a href=\"#impl-Debug-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#22\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#237-244\">source</a><a href=\"#impl-Default-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#238-243\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#96-102\">source</a><a href=\"#impl-Deref-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = C</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#99-101\">source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#104-108\">source</a><a href=\"#impl-DerefMut-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#105-107\">source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut C</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#421-430\">source</a><a href=\"#impl-Div%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#424-429\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#410-419\">source</a><a href=\"#impl-Div-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#413-418\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#439-444\">source</a><a href=\"#impl-DivAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#440-443\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#432-437\">source</a><a href=\"#impl-DivAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#433-436\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#335-341\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#338-340\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#245-251\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#248-250\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#343-349\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#346-348\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#271-277\">source</a><a href=\"#impl-From%3C(H,+T,+T,+A)%3E-for-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#274-276\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(H, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(H, T, T, A)>","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+A)%3E-for-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#328-332\">source</a><a href=\"#impl-From%3C(T,+A)%3E-for-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#329-331\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, A)>","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#260-266\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#263-265\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#258-264\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#261-263\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3COklch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#236-242\">source</a><a href=\"#impl-From%3C(T,+T,+H,+A)%3E-for-Alpha%3COklch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;&gt;, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#239-241\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, H, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, H, A)>","palette::oklch::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#287-291\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#288-290\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#289-293\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#290-292\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#280-284\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#281-283\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::oklab::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#911-915\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#912-914\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#376-380\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#377-379\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#223-227\">source</a><a href=\"#impl-From%3C(T,+T,+T,+A)%3E-for-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#224-226\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(components: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, A)>","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CLinear%3CSrgb%3E,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CSrgb,+U%3E,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#166-175\">source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CLinear%3CSrgb%3E,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CSrgb,+U%3E,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/linear/struct.Linear.html\" title=\"struct palette::encoding::linear::Linear\">Linear</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>&gt;, T&gt;, T&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.Srgba.html\" title=\"type palette::rgb::Srgba\">Srgba</a>&lt;U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    U: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a> + <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#171-174\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(lin_srgba: <a class=\"type\" href=\"palette/rgb/type.LinSrgba.html\" title=\"type palette::rgb::LinSrgba\">LinSrgba</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<Linear<Srgb>, T>, T>>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlpha%3CRgb%3CSrgb,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CLinear%3CSrgb%3E,+U%3E,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#187-195\">source</a><a href=\"#impl-From%3CAlpha%3CRgb%3CSrgb,+T%3E,+T%3E%3E-for-Alpha%3CRgb%3CLinear%3CSrgb%3E,+U%3E,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;<a class=\"struct\" href=\"palette/encoding/srgb/struct.Srgb.html\" title=\"struct palette::encoding::srgb::Srgb\">Srgb</a>, T&gt;, T&gt;&gt; for <a class=\"type\" href=\"palette/rgb/type.LinSrgba.html\" title=\"type palette::rgb::LinSrgba\">LinSrgba</a>&lt;U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>,\n    U: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a> + <a class=\"trait\" href=\"palette/trait.FromComponent.html\" title=\"trait palette::FromComponent\">FromComponent</a>&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb.rs.html#192-194\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(srgba: <a class=\"type\" href=\"palette/rgb/type.Srgba.html\" title=\"type palette::rgb::Srgba\">Srgba</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alpha<Rgb<Srgb, T>, T>>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CC%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#466-473\">source</a><a href=\"#impl-From%3CC%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;C&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#467-472\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: C) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<C>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPreAlpha%3CC,+T%3E%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/blend/pre_alpha.rs.html#75-93\">source</a><a href=\"#impl-From%3CPreAlpha%3CC,+T%3E%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C, T&gt;&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"palette/trait.ComponentWise.html\" title=\"trait palette::ComponentWise\">ComponentWise</a>&lt;Scalar = T&gt;,\n    T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/blend/pre_alpha.rs.html#80-92\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(color: <a class=\"struct\" href=\"palette/blend/struct.PreAlpha.html\" title=\"struct palette::blend::PreAlpha\">PreAlpha</a>&lt;C, T&gt;) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PreAlpha<C, T>>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromColorUnclamped%3CC1%3E-for-Alpha%3CC2,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#64-76\">source</a><a href=\"#impl-FromColorUnclamped%3CC1%3E-for-Alpha%3CC2,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C1: <a class=\"trait\" href=\"palette/trait.WithAlpha.html\" title=\"trait palette::WithAlpha\">WithAlpha</a>&lt;T&gt;, C2, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"palette/convert/trait.FromColorUnclamped.html\" title=\"trait palette::convert::FromColorUnclamped\">FromColorUnclamped</a>&lt;C1&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C2, T&gt;<div class=\"where\">where\n    C1::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a>: <a class=\"trait\" href=\"palette/convert/trait.IntoColorUnclamped.html\" title=\"trait palette::convert::IntoColorUnclamped\">IntoColorUnclamped</a>&lt;C2&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_color_unclamped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#68-75\">source</a><a href=\"#method.from_color_unclamped\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\" class=\"fn\">from_color_unclamped</a>(other: C1) -&gt; Self</h4></section></summary><div class='docblock'>Convert from T. The resulting color might be invalid in its color space. <a href=\"palette/convert/trait.FromColorUnclamped.html#tymethod.from_color_unclamped\">Read more</a></div></details></div></details>","FromColorUnclamped<C1>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetHue-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#139-145\">source</a><a href=\"#impl-GetHue-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.GetHue.html\" title=\"trait palette::GetHue\">GetHue</a>, T&gt; <a class=\"trait\" href=\"palette/trait.GetHue.html\" title=\"trait palette::GetHue\">GetHue</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Hue\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Hue\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.GetHue.html#associatedtype.Hue\" class=\"associatedtype\">Hue</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.GetHue.html\" title=\"trait palette::GetHue\">GetHue</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.GetHue.html#associatedtype.Hue\" title=\"type palette::GetHue::Hue\">Hue</a></h4></section></summary><div class='docblock'>The kind of hue unit this color space uses. <a href=\"palette/trait.GetHue.html#associatedtype.Hue\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#142-144\">source</a><a href=\"#method.get_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.GetHue.html#tymethod.get_hue\" class=\"fn\">get_hue</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C::<a class=\"associatedtype\" href=\"palette/trait.GetHue.html#associatedtype.Hue\" title=\"type palette::GetHue::Hue\">Hue</a>&gt;</h4></section></summary><div class='docblock'>Calculate a hue if possible. <a href=\"palette/trait.GetHue.html#tymethod.get_hue\">Read more</a></div></details></div></details>","GetHue","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hue-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#147-161\">source</a><a href=\"#impl-Hue-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Hue.html\" title=\"trait palette::Hue\">Hue</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"palette/trait.Hue.html\" title=\"trait palette::Hue\">Hue</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#148-153\">source</a><a href=\"#method.with_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Hue.html#tymethod.with_hue\" class=\"fn\">with_hue</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;C::<a class=\"associatedtype\" href=\"palette/trait.GetHue.html#associatedtype.Hue\" title=\"type palette::GetHue::Hue\">Hue</a>&gt;&gt;(&amp;self, hue: H) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Return a new copy of <code>self</code>, but with a specific hue.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_hue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#155-160\">source</a><a href=\"#method.shift_hue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Hue.html#tymethod.shift_hue\" class=\"fn\">shift_hue</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;C::<a class=\"associatedtype\" href=\"palette/trait.GetHue.html#associatedtype.Hue\" title=\"type palette::GetHue::Hue\">Hue</a>&gt;&gt;(&amp;self, amount: H) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h4></section></summary><div class='docblock'>Return a new copy of <code>self</code>, but with the hue shifted by <code>amount</code>.</div></details></div></details>","Hue","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(LuvHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#253-259\">source</a><a href=\"#impl-Into%3C(LuvHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHsluv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, T, T, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsluv.html\" title=\"struct palette::Hsluv\">Hsluv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsluv.rs.html#256-258\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(LuvHue<T>, T, T, A)>","palette::hsluv::Hsluva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(RgbHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#343-349\">source</a><a href=\"#impl-Into%3C(RgbHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHsl%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsl.html\" title=\"struct palette::Hsl\">Hsl</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsl.rs.html#346-348\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(RgbHue<T>, T, T, A)>","palette::hsl::Hsla"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(RgbHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#351-357\">source</a><a href=\"#impl-Into%3C(RgbHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHsv%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hsv.html\" title=\"struct palette::Hsv\">Hsv</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hsv.rs.html#354-356\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(RgbHue<T>, T, T, A)>","palette::hsv::Hsva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(RgbHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#279-285\">source</a><a href=\"#impl-Into%3C(RgbHue%3CT%3E,+T,+T,+A)%3E-for-Alpha%3CHwb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Hwb.html\" title=\"struct palette::Hwb\">Hwb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/hwb.rs.html#282-284\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (<a class=\"struct\" href=\"palette/struct.RgbHue.html\" title=\"struct palette::RgbHue\">RgbHue</a>&lt;T&gt;, T, T, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(RgbHue<T>, T, T, A)>","palette::hwb::Hwba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+A)%3E-for-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#334-338\">source</a><a href=\"#impl-Into%3C(T,+A)%3E-for-Alpha%3CLuma%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/luma/trait.LumaStandard.html\" title=\"trait palette::luma::LumaStandard\">LumaStandard</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/luma/struct.Luma.html\" title=\"struct palette::luma::Luma\">Luma</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luma/luma.rs.html#335-337\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, A)>","palette::luma::luma::Lumaa"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+LabHue%3CT%3E,+A)%3E-for-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#268-274\">source</a><a href=\"#impl-Into%3C(T,+T,+LabHue%3CT%3E,+A)%3E-for-Alpha%3CLch%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(T, T, <a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lch.html\" title=\"struct palette::Lch\">Lch</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lch.rs.html#271-273\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.LabHue.html\" title=\"struct palette::LabHue\">LabHue</a>&lt;T&gt;, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, LabHue<T>, A)>","palette::lch::Lcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+LuvHue%3CT%3E,+A)%3E-for-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#266-272\">source</a><a href=\"#impl-Into%3C(T,+T,+LuvHue%3CT%3E,+A)%3E-for-Alpha%3CLchuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(T, T, <a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lchuv.html\" title=\"struct palette::Lchuv\">Lchuv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lchuv.rs.html#269-271\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.LuvHue.html\" title=\"struct palette::LuvHue\">LuvHue</a>&lt;T&gt;, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, LuvHue<T>, A)>","palette::lchuv::Lchuva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+OklabHue%3CT%3E,+A)%3E-for-Alpha%3COklch%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#244-248\">source</a><a href=\"#impl-Into%3C(T,+T,+OklabHue%3CT%3E,+A)%3E-for-Alpha%3COklch%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;(T, T, <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, A)&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklch.html\" title=\"struct palette::Oklch\">Oklch</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklch.rs.html#245-247\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; (T, T, <a class=\"struct\" href=\"palette/struct.OklabHue.html\" title=\"struct palette::OklabHue\">OklabHue</a>&lt;T&gt;, A)</h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, OklabHue<T>, A)>","palette::oklch::Oklcha"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#293-297\">source</a><a href=\"#impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CLab%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Lab.html\" title=\"struct palette::Lab\">Lab</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lab.rs.html#294-296\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T, A)>","palette::lab::Laba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#295-299\">source</a><a href=\"#impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CLuv%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Luv.html\" title=\"struct palette::Luv\">Luv</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/luv.rs.html#296-298\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T, A)>","palette::luv::Luva"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#286-290\">source</a><a href=\"#impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3COklab%3CT%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Oklab.html\" title=\"struct palette::Oklab\">Oklab</a>&lt;T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/oklab.rs.html#287-289\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T, A)>","palette::oklab::Oklaba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#917-921\">source</a><a href=\"#impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CRgb%3CS,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S: <a class=\"trait\" href=\"palette/rgb/trait.RgbStandard.html\" title=\"trait palette::rgb::RgbStandard\">RgbStandard</a>, T: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/rgb/struct.Rgb.html\" title=\"struct palette::rgb::Rgb\">Rgb</a>&lt;S, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/rgb/rgb.rs.html#918-920\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T, A)>","palette::rgb::rgb::Rgba"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#382-386\">source</a><a href=\"#impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CXyz%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Xyz.html\" title=\"struct palette::Xyz\">Xyz</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/xyz.rs.html#383-385\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T, A)>","palette::xyz::Xyza"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#229-233\">source</a><a href=\"#impl-Into%3C(T,+T,+T,+A)%3E-for-Alpha%3CYxy%3CWp,+T%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Wp: <a class=\"trait\" href=\"palette/white_point/trait.WhitePoint.html\" title=\"trait palette::white_point::WhitePoint\">WhitePoint</a>, T: <a class=\"trait\" href=\"palette/trait.FloatComponent.html\" title=\"trait palette::FloatComponent\">FloatComponent</a>, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a>&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;<a class=\"struct\" href=\"palette/struct.Yxy.html\" title=\"struct palette::Yxy\">Yxy</a>&lt;Wp, T&gt;, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/yxy.rs.html#230-232\">source</a><a href=\"#method.into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/convert/trait.Into.html#tymethod.into\" class=\"fn\">into</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.tuple.html\">(T, T, T, A)</a></h4></section></summary><div class='docblock'>Converts this type into the (usually inferred) input type.</div></details></div></details>","Into<(T, T, T, A)>","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#475-490\">source</a><a href=\"#impl-LowerHex-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#480-489\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mix-for-Alpha%3CC,+%3CC+as+Mix%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#110-119\">source</a><a href=\"#impl-Mix-for-Alpha%3CC,+%3CC+as+Mix%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a>&gt; <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Mix.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.Mix.html\" title=\"trait palette::Mix\">Mix</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the mixing factor.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mix\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#113-118\">source</a><a href=\"#method.mix\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Mix.html#tymethod.mix\" class=\"fn\">mix</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>&gt;,\n    factor: C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>,\n) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Mix.html#associatedtype.Scalar\" title=\"type palette::Mix::Scalar\">Scalar</a>&gt;</h4></section></summary><div class='docblock'>Mix the color with an other color, by <code>factor</code>. <a href=\"palette/trait.Mix.html#tymethod.mix\">Read more</a></div></details></div></details>","Mix","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#385-394\">source</a><a href=\"#impl-Mul%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#388-393\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#374-383\">source</a><a href=\"#impl-Mul-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#377-382\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#403-408\">source</a><a href=\"#impl-MulAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#404-407\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#396-401\">source</a><a href=\"#impl-MulAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#397-400\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#47-55\">source</a><a href=\"#impl-PartialEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#52-54\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pixel%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#233-235\">source</a><a href=\"#impl-Pixel%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, C: <a class=\"trait\" href=\"palette/encoding/pixel/trait.Pixel.html\" title=\"trait palette::encoding::pixel::Pixel\">Pixel</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"palette/encoding/pixel/trait.Pixel.html\" title=\"trait palette::encoding::pixel::Pixel\">Pixel</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.CHANNELS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#234\">source</a><a href=\"#associatedconstant.CHANNELS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"palette/encoding/pixel/trait.Pixel.html#associatedconstant.CHANNELS\" class=\"constant\">CHANNELS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.usize.html\">usize</a> = _</h4></section></summary><div class='docblock'>The number of color channels.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#112-114\">source</a><a href=\"#method.as_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.as_raw\" class=\"fn\">as_raw</a>&lt;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;P</a></h4></section></summary><div class='docblock'>Cast as a reference to raw color components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#118-120\">source</a><a href=\"#method.as_raw_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.as_raw_mut\" class=\"fn\">as_raw_mut</a>&lt;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut P</a></h4></section></summary><div class='docblock'>Cast as a mutable reference to raw color components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#124-138\">source</a><a href=\"#method.into_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.into_raw\" class=\"fn\">into_raw</a>&lt;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixelSized.html\" title=\"trait palette::encoding::pixel::RawPixelSized\">RawPixelSized</a>&lt;T&gt;&gt;(self) -&gt; P</h4></section></summary><div class='docblock'>Convert into raw color components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#142-148\">source</a><a href=\"#method.from_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.from_raw\" class=\"fn\">from_raw</a>&lt;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(pixel: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;P</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Self</a></h4></section></summary><div class='docblock'>Cast from a reference to raw color components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#152-155\">source</a><a href=\"#method.from_raw_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.from_raw_mut\" class=\"fn\">from_raw_mut</a>&lt;P: <a class=\"trait\" href=\"palette/encoding/pixel/trait.RawPixel.html\" title=\"trait palette::encoding::pixel::RawPixel\">RawPixel</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(pixel: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut P</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class='docblock'>Cast from a mutable reference to raw color components.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#170-174\">source</a><a href=\"#method.from_raw_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.from_raw_slice\" class=\"fn\">from_raw_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[T]</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[Self]</a></h4></section></summary><div class='docblock'>Cast a slice of raw color components to a slice of colors. <a href=\"palette/encoding/pixel/trait.Pixel.html#method.from_raw_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#196-200\">source</a><a href=\"#method.from_raw_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.from_raw_slice_mut\" class=\"fn\">from_raw_slice_mut</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[T]</a>) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[Self]</a></h4></section></summary><div class='docblock'>Cast a mutable slice of raw color components to a mutable slice of\ncolors. <a href=\"palette/encoding/pixel/trait.Pixel.html#method.from_raw_slice_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#214-217\">source</a><a href=\"#method.into_raw_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.into_raw_slice\" class=\"fn\">into_raw_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[Self]</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Cast a slice of colors to a slice of raw color components. <a href=\"palette/encoding/pixel/trait.Pixel.html#method.into_raw_slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_raw_slice_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/encoding/pixel.rs.html#239-242\">source</a><a href=\"#method.into_raw_slice_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/encoding/pixel/trait.Pixel.html#method.into_raw_slice_mut\" class=\"fn\">into_raw_slice_mut</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[Self]</a>) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Cast a mutable slice of colors to a mutable slice of raw color\ncomponents. <a href=\"palette/encoding/pixel/trait.Pixel.html#method.into_raw_slice_mut\">Read more</a></div></details></div></details>","Pixel<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#264-284\">source</a><a href=\"#impl-RelativeEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a>&lt;Epsilon = T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>&gt;,\n    T: <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a>,\n    T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#270-272\">source</a><a href=\"#method.default_max_relative\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\" class=\"fn\">default_max_relative</a>() -&gt; Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#274-283\">source</a><a href=\"#method.relative_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/relative_eq.rs.html#22-27\">source</a><a href=\"#method.relative_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#method.relative_ne\" class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" title=\"method approx::relative_eq::RelativeEq::relative_eq\"><code>RelativeEq::relative_eq</code></a>.</div></details></div></details>","RelativeEq","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Saturate-for-Alpha%3CC,+%3CC+as+Saturate%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#163-179\">source</a><a href=\"#impl-Saturate-for-Alpha%3CC,+%3CC+as+Saturate%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Saturate.html\" title=\"trait palette::Saturate\">Saturate</a>&gt; <a class=\"trait\" href=\"palette/trait.Saturate.html\" title=\"trait palette::Saturate\">Saturate</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Saturate.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.Saturate.html\" title=\"trait palette::Saturate\">Saturate</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the (de)saturation modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#166-171\">source</a><a href=\"#method.saturate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Saturate.html#tymethod.saturate\" class=\"fn\">saturate</a>(&amp;self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>&gt;</h4></section></summary><div class='docblock'>Scale the color towards the maximum saturation by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Saturate.html#tymethod.saturate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturate_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#173-178\">source</a><a href=\"#method.saturate_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Saturate.html#tymethod.saturate_fixed\" class=\"fn\">saturate_fixed</a>(&amp;self, amount: C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>&gt;</h4></section></summary><div class='docblock'>Increase the saturation by <code>amount</code>, a value ranging from <code>0.0</code> to\n<code>1.0</code>. <a href=\"palette/trait.Saturate.html#tymethod.saturate_fixed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.desaturate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lib.rs.html#695-697\">source</a><a href=\"#method.desaturate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Saturate.html#method.desaturate\" class=\"fn\">desaturate</a>(&amp;self, factor: Self::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Scale the color towards the minimum saturation by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Saturate.html#method.desaturate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.desaturate_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lib.rs.html#709-711\">source</a><a href=\"#method.desaturate_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Saturate.html#method.desaturate_fixed\" class=\"fn\">desaturate_fixed</a>(&amp;self, amount: Self::<a class=\"associatedtype\" href=\"palette/trait.Saturate.html#associatedtype.Scalar\" title=\"type palette::Saturate::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Increase the saturation by <code>amount</code>, a value ranging from <code>0.0</code> to\n<code>1.0</code>. <a href=\"palette/trait.Saturate.html#method.desaturate_fixed\">Read more</a></div></details></div></details>","Saturate","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shade-for-Alpha%3CC,+%3CC+as+Shade%3E::Scalar%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#121-137\">source</a><a href=\"#impl-Shade-for-Alpha%3CC,+%3CC+as+Shade%3E::Scalar%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"palette/trait.Shade.html\" title=\"trait palette::Shade\">Shade</a>&gt; <a class=\"trait\" href=\"palette/trait.Shade.html\" title=\"trait palette::Shade\">Shade</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.Shade.html#associatedtype.Scalar\" class=\"associatedtype\">Scalar</a> = &lt;C as <a class=\"trait\" href=\"palette/trait.Shade.html\" title=\"trait palette::Shade\">Shade</a>&gt;::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a></h4></section></summary><div class='docblock'>The type of the lighten/darken modifier.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#124-129\">source</a><a href=\"#method.lighten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Shade.html#tymethod.lighten\" class=\"fn\">lighten</a>(&amp;self, factor: C::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>&gt;</h4></section></summary><div class='docblock'>Scale the color towards the maximum lightness by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Shade.html#tymethod.lighten\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lighten_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#131-136\">source</a><a href=\"#method.lighten_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Shade.html#tymethod.lighten_fixed\" class=\"fn\">lighten_fixed</a>(&amp;self, amount: C::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>) -&gt; <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, C::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>&gt;</h4></section></summary><div class='docblock'>Lighten the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Shade.html#tymethod.lighten_fixed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.darken\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lib.rs.html#563-565\">source</a><a href=\"#method.darken\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Shade.html#method.darken\" class=\"fn\">darken</a>(&amp;self, factor: Self::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Scale the color towards the minimum lightness by <code>factor</code>, a value\nranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Shade.html#method.darken\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.darken_fixed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/lib.rs.html#576-578\">source</a><a href=\"#method.darken_fixed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.Shade.html#method.darken_fixed\" class=\"fn\">darken_fixed</a>(&amp;self, amount: Self::<a class=\"associatedtype\" href=\"palette/trait.Shade.html#associatedtype.Scalar\" title=\"type palette::Shade::Scalar\">Scalar</a>) -&gt; Self</h4></section></summary><div class='docblock'>Darken the color by <code>amount</code>, a value ranging from <code>0.0</code> to <code>1.0</code>. <a href=\"palette/trait.Shade.html#method.darken_fixed\">Read more</a></div></details></div></details>","Shade","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#349-358\">source</a><a href=\"#impl-Sub%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#352-357\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, c: T) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#338-347\">source</a><a href=\"#impl-Sub-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;&lt;C as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#341-346\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#367-372\">source</a><a href=\"#impl-SubAssign%3CT%3E-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;T&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#368-371\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, c: T)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<T>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#360-365\">source</a><a href=\"#impl-SubAssign-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>, T: <a class=\"trait\" href=\"palette/float/trait.Float.html\" title=\"trait palette::float::Float\">Float</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#361-364\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.80.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#286-300\">source</a><a href=\"#impl-UlpsEq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a>&lt;Epsilon = T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>&gt;,\n    T: <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a>,\n    T::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#292-294\">source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\" class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#296-299\">source</a><a href=\"#method.ulps_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/ulps_eq.rs.html#23\">source</a><a href=\"#method.ulps_ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#method.ulps_ne\" class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" title=\"method approx::ulps_eq::UlpsEq::ulps_eq\"><code>UlpsEq::ulps_eq</code></a>.</div></details></div></details>","UlpsEq","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#492-507\">source</a><a href=\"#impl-UpperHex-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#497-506\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.0/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WithAlpha%3CA%3E-for-Alpha%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#78-94\">source</a><a href=\"#impl-WithAlpha%3CA%3E-for-Alpha%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A: <a class=\"trait\" href=\"palette/trait.Component.html\" title=\"trait palette::Component\">Component</a>&gt; <a class=\"trait\" href=\"palette/trait.WithAlpha.html\" title=\"trait palette::WithAlpha\">WithAlpha</a>&lt;A&gt; for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, A&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Color\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Color\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.WithAlpha.html#associatedtype.Color\" class=\"associatedtype\">Color</a> = C</h4></section></summary><div class='docblock'>The opaque color type, without any transparency. <a href=\"palette/trait.WithAlpha.html#associatedtype.Color\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.WithAlpha\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.WithAlpha\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" class=\"associatedtype\">WithAlpha</a> = <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, A&gt;</h4></section></summary><div class='docblock'>The color type with transparency applied. <a href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#82-85\">source</a><a href=\"#method.with_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.with_alpha\" class=\"fn\">with_alpha</a>(self, alpha: A) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a></h4></section></summary><div class='docblock'>Transforms the color into a transparent color with the provided\nalpha value. If <code>Self</code> already has a transparency, it is\noverwritten. <a href=\"palette/trait.WithAlpha.html#tymethod.with_alpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_alpha\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#87-89\">source</a><a href=\"#method.without_alpha\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.without_alpha\" class=\"fn\">without_alpha</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a></h4></section></summary><div class='docblock'>Removes the transparency from the color. If <code>Self::Color</code> has\nan internal transparency field, that field will be set to\n<code>A::max_intensity()</code> to make it opaque. <a href=\"palette/trait.WithAlpha.html#tymethod.without_alpha\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#91-93\">source</a><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#tymethod.split\" class=\"fn\">split</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.Color\" title=\"type palette::WithAlpha::Color\">Color</a>, A)</h4></section></summary><div class='docblock'>Splits the color into separate color and transparency values. <a href=\"palette/trait.WithAlpha.html#tymethod.split\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.opaque\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha.rs.html#145-147\">source</a><a href=\"#method.opaque\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#method.opaque\" class=\"fn\">opaque</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a></h4></section></summary><div class='docblock'>Transforms the color into a fully opaque color with a transparency\nfield. If <code>Self</code> already has a transparency, it is overwritten. <a href=\"palette/trait.WithAlpha.html#method.opaque\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transparent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/palette/alpha.rs.html#160-162\">source</a><a href=\"#method.transparent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"palette/trait.WithAlpha.html#method.transparent\" class=\"fn\">transparent</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"palette/trait.WithAlpha.html#associatedtype.WithAlpha\" title=\"type palette::WithAlpha::WithAlpha\">WithAlpha</a></h4></section></summary><div class='docblock'>Transforms the color into a fully transparent color. If <code>Self</code>\nalready has a transparency, it is overwritten. <a href=\"palette/trait.WithAlpha.html#method.transparent\">Read more</a></div></details></div></details>","WithAlpha<A>","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<section id=\"impl-Copy-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#22\">source</a><a href=\"#impl-Copy-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;</h3></section>","Copy","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"],["<section id=\"impl-Eq-for-Alpha%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/palette/alpha/alpha.rs.html#57-62\">source</a><a href=\"#impl-Eq-for-Alpha%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"palette/struct.Alpha.html\" title=\"struct palette::Alpha\">Alpha</a>&lt;C, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","palette::hsl::Hsla","palette::hsluv::Hsluva","palette::hsv::Hsva","palette::hwb::Hwba","palette::lab::Laba","palette::lch::Lcha","palette::lchuv::Lchuva","palette::luma::luma::Lumaa","palette::luv::Luva","palette::oklab::Oklaba","palette::oklch::Oklcha","palette::rgb::rgb::Rgba","palette::xyz::Xyza","palette::yxy::Yxya"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()