searchState.loadedDescShard("navigator_rs", 0, "Navigator-rs\nEncapsulates the value of ADC’s four channels.\nSet of available options to select ADC’s channel.\nThe <code>AxisData</code> struct encapsulate values for the x, y, and z …\nThe <code>Led</code> struct represents the 3 LEDs on navigator board.\nAttached to green LED through GPIO 24, labelled LED_1.\nAttached to blue LED through GPIO 25, labelled LED_2.\nAttached to red LED through GPIO 11, labelled LED_3.\nThe <code>Navigator</code> struct contains various components used for …\nBuild pattern structure\nThe <code>Pwm</code> struct represents a PWM (Pulse Width Modulation) …\nSet of available options to select PWM’s channel.\nEncapsulates the value of all sensors on the board.\nSet of options to control navigator’s LEDs.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the selected navigator LED output state. The true …\nGet the PWM IC enabling value through OE_pin.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads acceleration based on ICM20689 of <code>Navigator</code>.\nReads the ADC based on ADS1115 of <code>Navigator</code>.\nReads the ADC based on ADS1115 of <code>Navigator</code>.\nReads all sensors and stores on a single structure.\nReads the altitude based on pressure values measured by …\nReads angular velocity based on ICM20689 of <code>Navigator</code>.\nReads the state of leak detector pin from <code>Navigator</code>.\nReads the magnetometer Ak09915 of <code>Navigator</code>.\nReads the pressure based on BMP280 of <code>Navigator</code>.\nReads the temperature using BMP280 of <code>Navigator</code>.\nSets the selected navigator LED output.\nSet all LEDs on desired state ( Blue, Green and Red ).\nToggle the output of selected LED.\nSet the values of the neopixel LED array.\nSet the values of the neopixel RGBW LED array.\nCalculate and set the necessary values for the desired …\nSets the Duty Cycle (high value time) of selected channel.\nLike <code>set_pwm_channel_duty_cycle</code>. This function sets the …\nLike <code>set_pwm_channel_duty_cycle</code>. This function sets the …\nLike <code>set_pwm_channel_value</code>. This function sets the Duty …\nLike <code>set_pwm_channel_value</code>. This function sets the Duty …\nSets the PWM IC to be enabled through OE_pin.\nSets the pwm frequency in Hertz of <code>Navigator</code>.\nSets the PWM frequency of <code>Navigator</code>.")