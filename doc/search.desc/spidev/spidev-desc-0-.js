searchState.loadedDescShard("spidev", 0, "Spidev\nSI/SO Signals Shared\nClock Phase\nClock Polarity\nChipselect Active High?\nLoopback Mode\nPer-word Bits On Wire\n1 dev/bus; no chipselect\nSlave pulls low to pause\nReceive with 2 wires\nReceive with 4 wires\nTransmit with 2 wires\nTransmit with 4 wires\nProvide high-level access to Linux Spidev Driver\nOptions that control defaults for communication on a device\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nThe number of bits in each SPI transfer word\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nFinalize and build the SpidevOptions\nReturns the complement of this set of flags.\nWrite the provided configuration to this device\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nGet a reference to the underlying <code>File</code> object\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the object and get the underlying <code>File</code> object\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nThe bit justification used to transfer SPI words\nThe maximum SPI transfer speed, in Hz\nSet the SPI Transfer Mode\nWrap an already opened <code>File</code> for use as an spidev\nCreate a new, empty set of options\nReturns the complement of this set of flags.\nOpen the spidev device with the provided path\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nPerform a single transfer\nPerform multiple transfers in a single system call to the …\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nRepresentation of a spidev transfer that is shared with …\nCreate a delay transfer of a number of microseconds\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a read transfer\nCreate a read/write transfer. Note that the <code>tx_buf</code> and …\nStructure that is used when performing communication with …\nCreate a write transfer")